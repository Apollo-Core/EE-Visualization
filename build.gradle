buildscript {
  repositories {
    jcenter()
  }
}

// to run sonarqube in local host
plugins {
  id "org.sonarqube" version "2.7"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'
// for compliance with higher Java versions
jacoco {
  toolVersion = "0.8.5"
}

group 'Apollo-Core-EE-Visualization'
version '1.0-SNAPSHOT'


repositories {
  mavenCentral()
  maven {
    name "jitpack"
    url 'https://jitpack.io' }
}

dependencies {
  // dependencies to other components of Apollo-Core EE
  if (project.hasProperty("local")) {
    implementation project (':EE-Core')
    implementation project (':EE-Guice')
    implementation project (':EE-Model')
    implementation project (':EE-Control')
  }else {
    implementation 'com.github.Apollo-Core:EE-Core:v1.0.0'
    implementation 'com.github.Apollo-Core:EE-Guice:v1.0.0'
    implementation 'com.github.Apollo-Core:EE-Model:v1.0.0'
    implementation 'com.github.Apollo-Core:EE-Control:v1.0.0'
  }

  // dependency to Opt4J
  implementation 'com.github.FedorSmirnov89:opt4j:-SNAPSHOT'
  // dependency to opendse
  implementation 'com.github.FedorSmirnov89:opendse:-SNAPSHOT'

  // VertX
  implementation 'io.vertx:vertx-core:4.1.0'

  implementation 'com.google.code.gson:gson:2.8.6'

  // test dependencies
  testImplementation(platform('org.junit:junit-bom:5.7.2'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testCompile group: 'org.mockito',     name: 'mockito-core',     version: '3.4.4'
  // dependency to local files
  // compile files('libs/lib.jar')
}

test {
  useJUnitPlatform()
}


